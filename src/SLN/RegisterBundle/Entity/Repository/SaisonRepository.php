<?php

namespace SLN\RegisterBundle\Entity\Repository;

use Doctrine\ORM\EntityRepository;

use SLN\RegisterBundle\Entity\Saison;

/**
 * SaisonRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SaisonRepository extends EntityRepository
{
    /**
     * Returns all the saisons
     *
     * @return Saison[] list of saisons
     */
    public function findAll() {
        $qb = $this->createQueryBuilder('s')
                   ->select('s')
                   ->addOrderBy('s.id', 'ASC');

        return $qb->getQuery()
                  ->getResult();
    }

    /**
     * Return current saison
     *
     * This is the saison for which starting date is before current date, but
     * with the maximum value.
     */
    public function getCurrent() {
        $qb = $this->createQueryBuilder('s')
                   ->select('s')
                   ->where('DATE_DIFF(s.start, CURRENT_DATE()) < 0')
                   ->addOrderBy('s.start', 'DESC');

        $results =  $qb->getQuery()->getResult();
        return count($results) > 0 ? $results[0] : NULL;
    }

    /* 
     * Return the last open saison for inscription
     */
    public function getOpen() {
        $qb = $this->createQueryBuilder('s')
                   ->select('s')
                   ->where('s.activated=1')
                   ->addOrderBy('s.start', 'DESC');

        $results =  $qb->getQuery()->getResult();
        return count($results) > 0 ? $results[0] : NULL;
    }
}
